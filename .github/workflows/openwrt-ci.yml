# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

#on:
##  push:
##    branches:
##      - master
#  schedule:
#    - cron: 0 20 * * *

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'tags'
        required: false 
        type: boolean

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          # sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E bash -c 'bash <(curl -s https://build-scripts.immortalwrt.eu.org/init_build_environment.sh)'
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"
      - name: Checkout OpenWrt
        uses: actions/checkout@v3

      - name: Update feeds
        run: |
          # sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          # git clone https://github.com/kongfl888/luci-app-adguardhome ./package/luci-app-adguardhome
          # git clone https://github.com/sbwml/luci-app-mosdns -b v5 package/mosdns
          ./scripts/feeds clean
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
#        run: make defconfig
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # cat >> .config <<EOF
          # 
          
          cat >> .config <<EOF
          #
          # luci-applications
          #
          CONFIG_PACKAGE_default-settings=y
          CONFIG_PACKAGE_default-settings-chn=y
          
          # CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs is not set
          # CONFIG_PACKAGE_luci-app-diskman_INCLUDE_lsblk is not set
          CONFIG_PACKAGE_luci-app-filetransfer=y
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          CONFIG_PACKAGE_luci-app-unblockneteasemusic=y
          CONFIG_PACKAGE_luci-app-upnp=y
          CONFIG_PACKAGE_luci-app-vlmcsd=y
          CONFIG_PACKAGE_luci-app-wol=y
          CONFIG_PACKAGE_luci-app-homeproxy=y

          #
          # luci-theme
          #
          
          CONFIG_PACKAGE_luci-theme-argon=y
          # CONFIG_PACKAGE_luci-theme-bootstrap is not set
          
          #
          # Package
          #
          
          CONFIG_PACKAGE_tailscale=y
          CONFIG_PACKAGE_tailscaled=y
          CONFIG_PACKAGE_ip-full=y
          
          #
          # Target
          #
          
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          # CONFIG_TARGET_ROOTFS_EXT4FS is not set
          # CONFIG_TARGET_ROOTFS_TARGZ is not set
          CONFIG_GRUB_TITLE="MyOpenwrt"
          CONFIG_TARGET_KERNEL_PARTSIZE=64
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024
                    
          EOF
          
          #
          # ===============================================================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      
      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
